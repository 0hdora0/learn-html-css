/* 전체 선택자 */
* {
  font-size: 36px;
}

/* 요소 선택자 */
/* margin: border선 바깥 영역 변화 */
body {
  margin: 20px;
}

a {
  text-decoration: none;
  /* 값으로 wavy를 주려면 text-decoration이 아닌 text-decoration-style로 입력해야 함. */
  color: red;
}

p {
  border: 2px solid blue;
}

/* 클래스 선택자 */
/* 현업에서 가장 많이 쓰게 될 선택자 */
/* (theme.css) 프로퍼티 안에 있는 값을 가져오기 위해서 var()을 사용 */
.like {
  background-color: var(--yellow);
  border: 2px dashed green;
}

p {
  color: black;
}

/* 아이디 선택자 */
#lion {
  background-color: var(--orange);
}

/* 클래스 선택자를 여러 개 조합하더라도 아이디 선택자의 스타일을 재지정 할 수 없다. */
.a.b.c.d.e.f.g.h.i.j.like {
  background-color: aqua;
}

/* 속성 선택자 */
a[href^='https'] {
  color: green;
}

/* 자손 결합자 */
.bootcamp p {
  color: gray;
}

/* 자식 결합자 */ /* 꺽쇠의 의미: 직계자식 */
.bootcamp > blockquote > p {
  padding: 10px; /* 패딩: 테두리 안 여백 */
}

/* 선택자 그룹화 */
a,
h1,
#lion {
  font-family: Georgia, 'Times New Roman', Times, serif;
}

/*가상 요소 선택자 */ /* before은 반드시 content와 같이 써야 함. */
/* 가상 컨텐츠는 드래그가 안 됨. (com+a 했을 때) */
/* 가상 요소 선택자는 JS상으로 제어가 안 됨. */
h1::before {
  content: '멋사';
}

h1::after {
  content: '15기';
}

p::before {
  content: 'Open';
  font-size: 36px;
  color: red;
}

/*first-letter를 쓰지 않으면 html상에서 span태그로 O을 묶고 수정해야 함. */
p::first-letter {
  font-size: 80px;
  font-weight: 900;
}

/* 드래그 했을 때 변화 */
p::selection {
  background-color: darkblue;
  color: white;
}

/* 가상 클래스 */
/* hover는 모든 요소에 사용 가능.*/
h1:hover {
  background-color: pink;
}

/* h1은 포커서블 개체가 아니므로 html에 tabindex를 추가해야 함. */
h1:focus {
  border: 2px dashed black;
}

a:link {
  color: purple;
}

a:visited {
  color: grey;
}

/* 호버, 포커스, 액티브는 링크나 비짓보다 나중에 선언해야 함. */
a:hover,
a:focus,
a:active {
  color: red;
}

a:focus {
  outline: 2px solid red;
  /* outline-offset은 텝키 눌렀을 때 테두리와 텍스트 사이 간격이 넓어짐 */
  outline-offset: 10px;
}

.frontend p:first-child {
  font-size: 16px;
}

.frontend p:nth-child(2) {
  font-size: 20px;
  font-weight: 700;
}
